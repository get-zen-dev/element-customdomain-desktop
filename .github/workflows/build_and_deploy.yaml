# Original source: https://github.com/vector-im/element-desktop/blob/master/.github/workflows/build_and_deploy.yaml
# Changes:
# - Only "linux" and "windows*" are called.
# - Slightly edited inputs.

name: Build and Deploy
on:
    ## Nightly build
    #schedule:
    #    - cron: "0 9 * * *"
    # Manual nightly & release
    workflow_dispatch:
        inputs:
            mode:
                description: What type of build to trigger. Release builds MUST be ran from the `master/main` branch.
                required: true
                default: release
                type: choice
                options:
                    - release
            macos:
                description: Build macOS
                required: true
                type: boolean
                default: false
            windows_32bit:
                description: Build Windows 32-bit
                required: true
                type: boolean
                default: false
            windows_64bit:
                description: Build Windows 64-bit
                required: true
                type: boolean
                default: false
            linux:
                description: Build Linux
                required: true
                type: boolean
                default: false
            element-version:
                description: Version of Element to build
                required: true
                type: string
                default: v1.11.28
            short-version:
                required: true
                type: string
                default: 1.11.28
            homeserver:
                description: Homeserver to use
                required: true
                type: string
                default: mtrx.intra.getzen.dev
            naming:
                description: Suffix of generated files that shows that Element is built with custom home server
                required: true
                type: string
                default: mtrx-intra-getzen-dev
concurrency: ${{ github.workflow }}
env:
    R2_BUCKET: "packages-element-io"
jobs:
    prepare:
        uses: ./.github/workflows/build_prepare.yaml
        with:
            config: element.io/${{ inputs.mode || 'nightly' }}
            nightly: ${{ inputs.mode != 'release' }}
            element-version: ${{ inputs.element-version }}
            homeserver: ${{ inputs.homeserver }}
        secrets:
            CF_R2_ACCESS_KEY_ID: ${{ secrets.CF_R2_ACCESS_KEY_ID }}
            CF_R2_TOKEN: ${{ secrets.CF_R2_TOKEN }}
            CF_R2_S3_API: ${{ secrets.CF_R2_S3_API }}
    
    windows_32bit:
        if: github.event_name != 'workflow_dispatch' || inputs.windows_32bit
        needs: prepare
        name: Windows 32-bit
        uses: ./.github/workflows/build_windows.yaml
        secrets: inherit
        with:
            deploy-mode: true
            arch: x86
            element-version: ${{ inputs.element-version }}
            homeserver: ${{ inputs.homeserver }}

    windows_64bit:
        if: github.event_name != 'workflow_dispatch' || inputs.windows_64bit
        needs: prepare
        name: Windows 64-bit
        uses: ./.github/workflows/build_windows.yaml
        secrets: inherit
        with:
            deploy-mode: true
            arch: x64
            element-version: ${{ inputs.element-version }}
            homeserver: ${{ inputs.homeserver }}

    linux:
        if: github.event_name != 'workflow_dispatch' || inputs.linux
        needs: prepare
        name: Linux
        uses: ./.github/workflows/build_linux.yaml
        with:
            config: element.io/${{ inputs.mode || 'nightly' }}
            sqlcipher: system
            element-version: ${{ inputs.element-version }}
            homeserver: ${{ inputs.homeserver }}
    
    add-to-releases:
        needs: [prepare, linux, windows_32bit, windows_64bit]
        runs-on: ubuntu-latest
        name: Release Installers
        permissions: write-all
        steps:
          - uses: actions/download-artifact@v3
            with:
                name: linux-sqlcipher-system
          - uses: actions/download-artifact@v3
            with:
                name: packages.element.io

          - run: ls -R

          # https://github.com/actions/upload-release-asset

          - name: Create Release
            id: create_release
            uses: actions/create-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              tag_name: Element-${{ inputs.naming }}-${{ inputs.element-version }}
              release_name: Release Element-${{ inputs.naming }}-${{ inputs.element-version }}
              draft: false
              prerelease: false
          
          - name: Upload Release Asset (Linux)
            id: upload-release-asset-linux
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
              asset_path: ./element-desktop_${{ inputs.short-version }}_amd64.deb.deb
              asset_name: Element-${{ inputs.naming }}-${{ inputs.element-version }}.deb
              asset_content_type: application/deb

          - name: Upload Release Asset (Windows)
            id: upload-release-asset-windows
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
              asset_path: ./install/win32/x64/Element Setup.exe
              asset_name: Element-Setup-${{ inputs.naming }}-${{ inputs.element-version }}.exe
              asset_content_type: application
          
